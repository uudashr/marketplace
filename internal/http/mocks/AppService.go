// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import app "github.com/uudashr/marketplace/internal/app"
import category "github.com/uudashr/marketplace/internal/category"

import mock "github.com/stretchr/testify/mock"

// AppService is an autogenerated mock type for the AppService type
type AppService struct {
	mock.Mock
}

// RegisterNewCategory provides a mock function with given fields: _a0
func (_m *AppService) RegisterNewCategory(_a0 app.RegisterNewCategoryCommand) (*category.Category, error) {
	ret := _m.Called(_a0)

	var r0 *category.Category
	if rf, ok := ret.Get(0).(func(app.RegisterNewCategoryCommand) *category.Category); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*category.Category)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(app.RegisterNewCategoryCommand) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RetrieveCategories provides a mock function with given fields:
func (_m *AppService) RetrieveCategories() ([]*category.Category, error) {
	ret := _m.Called()

	var r0 []*category.Category
	if rf, ok := ret.Get(0).(func() []*category.Category); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*category.Category)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RetrieveCategoryByID provides a mock function with given fields: _a0
func (_m *AppService) RetrieveCategoryByID(_a0 app.RetrieveCategoryByIDCommand) (*category.Category, error) {
	ret := _m.Called(_a0)

	var r0 *category.Category
	if rf, ok := ret.Get(0).(func(app.RetrieveCategoryByIDCommand) *category.Category); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*category.Category)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(app.RetrieveCategoryByIDCommand) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
